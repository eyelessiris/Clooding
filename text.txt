<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>클러딩</title>
<style>
  body {
    margin: 0;
    font-family: 'Noto Sans KR', sans-serif;
    background: #f5f5f7;
    color: #222;
    font-size: 18px;
    line-height: 1.6;
  }

  header {
    display: flex;
    align-items: center;
    padding: 20px 40px;
    background-color: #4f6ef7;
    color: white;
  }

  .logo {
    font-weight: 700;
    font-size: 32px;
  }

  nav {
    flex: 1;
    display: flex;
    justify-content: center;
    gap: 32px;
    font-size: 18px;
  }

  nav a {
    color: white;
    text-decoration: none;
    cursor: pointer;
    font-weight: 600;
  }

  nav a:hover {
    text-decoration: underline;
  }

  .user-info {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .user-info .icon {
    width: 36px;
    height: 36px;
    background-color: white;
    border-radius: 50%;
  }

  .container {
    max-width: 1200px;
    margin: 32px auto;
    padding: 0 32px;
  }

  .card {
    background: white;
    border-radius: 16px;
    padding: 32px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    margin-bottom: 32px;
  }

  #login-section {
    max-width: 400px;
    margin: 80px auto;
    padding: 40px;
  }

  #login-section h2 {
    font-size: 28px;
    margin-bottom: 24px;
  }

  #login-section input, #login-section button {
    width: 100%;
    padding: 16px;
    margin-bottom: 20px;
    border-radius: 8px;
    border: 1px solid #ccc;
    font-size: 18px;
    box-sizing: border-box;
  }

  #login-section input.error {
    border-color: red;
  }

  #login-section button {
    background: #4f6ef7;
    color: white;
    border: none;
    cursor: pointer;
    font-weight: 600;
    font-size: 18px;
  }

  #login-message {
    color: red;
    font-size: 16px;
    margin-top: -12px;
    margin-bottom: 16px;
  }

  .hidden { display: none; }

  .top-cards {
    display: flex;
    gap: 32px;
    margin-bottom: 40px;
  }

  .schedule-card, .meal-card { flex: 1; }

  .profile-card {
    flex: 0 0 240px;
    text-align: center;
  }

  h3 {
    font-size: 24px;
    margin-top: 0;
    margin-bottom: 24px;
  }

  .profile-avatar {
    width: 100px;
    height: 100px;
    background: #4f6ef7;
    border-radius: 50%;
    margin: 0 auto 24px;
  }

  .profile-name {
    font-weight: 700;
    font-size: 24px;
    margin-bottom: 8px;
  }

  .profile-id {
    color: #888;
    font-size: 18px;
  }

  .schedule-list {
    background: #f9f9fb;
    border-radius: 12px;
    padding: 24px;
  }

  .schedule-item {
    display: flex;
    gap: 16px;
    font-size: 18px;
    color: #555;
    margin-bottom: 16px;
  }

  .period {
    width: 60px;
    font-weight: 600;
    color: #888;
  }

  .subject { flex: 1; }

  .meal-tabs {
    display: flex;
    gap: 16px;
    margin-bottom: 24px;
  }

  .meal-tab {
    flex: 1;
    text-align: center;
    padding: 12px;
    border-radius: 10px;
    cursor: pointer;
    font-weight: 600;
    background: #f0f0f5;
    color: #666;
    user-select: none;
    font-size: 18px;
  }

  .meal-tab.active {
    background: #4f6ef7;
    color: white;
  }

  .meal-content {
    background: #f9f9fb;
    border-radius: 12px;
    padding: 32px;
    min-height: 140px;
    color: #666;
    position: relative;
    font-size: 18px;
  }

  .empty {
    text-align: center;
    color: #aaa;
    font-size: 18px;
    margin: 20px 0;
  }

  #meal-menu {
    margin-bottom: 24px;
    font-size: 18px;
  }

  .meal-calories {
    position: absolute;
    bottom: 16px;
    right: 20px;
    font-size: 16px;
    color: #aaa;
  }

  .dorm-section {
    margin-top: 60px;
  }

  .dorm-header {
    font-weight: 700;
    font-size: 24px;
    margin-bottom: 24px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .dorm-cards {
    display: flex;
    gap: 32px;
  }

  .dorm-card {
    background: white;
    border-radius: 16px;
    padding: 32px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    flex: 1;
    text-align: center;
    position: relative;
    min-height: 160px;
  }

  .empty-message {
    color: #999;
    font-size: 18px;
    text-align: center;
    margin-top: 40px;
  }

  .count-info {
    font-weight: 700;
    font-size: 36px;
    margin-top: 20px;
    text-align: right;
  }

  .progress-bar {
    background: #e0e0ff;
    border-radius: 12px;
    height: 14px;
    overflow: hidden;
    margin-top: 16px;
  }

  .progress-fill {
    background: #4f6ef7;
    height: 100%;
    width: 0%;
    transition: width 0.3s ease;
  }

  .dorm-card button {
    position: absolute;
    bottom: 24px;
    right: 24px;
    background: #a0a0a0;
    border: none;
    border-radius: 8px;
    color: white;
    font-weight: 600;
    padding: 14px 28px;
    cursor: not-allowed;
    font-size: 18px;
  }
</style>
</head>
<body>
<header>
  <div class="logo">클러딩</div>
  <nav>
    <a href="dormitory.html">기숙사</a>
    <a href="homebase.html">홈베이스</a>
    <a href="club.html">동아리</a>
    <a href="attendance.html">출결</a>
  </nav>
  <div class="user-info">
    <div class="icon"></div>
    <div id="header-user"></div>
  </div>
</header>

<div class="container">
  <section id="login-section" class="card">
    <h2>로그인</h2>
    <input type="text" id="login-student-id" placeholder="학번 입력" />
    <input type="password" id="login-password" placeholder="비밀번호 입력" />
    <button id="login-submit-btn">로그인</button>
    <div id="login-message"></div>
  </section>

  <section id="main-content" class="hidden">
    <div class="top-cards">
      <section class="card schedule-card">
        <h3>시간표 <span id="schedule-date"></span></h3>
        <div id="schedule-list" class="schedule-list"></div>
      </section>

      <section class="card meal-card">
        <h3>급식 <span id="meal-date"></span></h3>
        <div class="meal-tabs">
          <div class="meal-tab" data-type="breakfast">조식</div>
          <div class="meal-tab" data-type="lunch">중식</div>
          <div class="meal-tab active" data-type="dinner">석식</div>
        </div>
        <div id="meal-content" class="meal-content">
          <div class="empty">오늘은 급식이 없습니다.</div>
          <div id="meal-menu"></div>
          <div id="meal-calories" class="meal-calories">0Kcal</div>
        </div>
      </section>

      <section class="card profile-card">
        <div class="profile-avatar"></div>
        <div id="profile-name" class="profile-name"></div>
        <div id="profile-id" class="profile-id"></div>
      </section>
    </div>

    <section class="dorm-section">
      <div class="dorm-header">
        <div>기숙사</div>
        <div><a href="#" style="color:#4f6ef7; text-decoration:none;">더보기 &gt;</a></div>
      </div>
      <div class="dorm-cards">
        <div class="dorm-card" id="selfStudy-card">
          <div class="empty-message" id="selfStudy-empty">신청자가 없습니다.</div>
          <div id="selfStudy-count" class="count-info">0/50</div>
          <div class="progress-bar"><div id="selfStudy-progress" class="progress-fill"></div></div>
          <button disabled>20시 00분 시작</button>
        </div>
        <div class="dorm-card" id="massageChair-card">
          <div class="empty-message" id="massageChair-empty">신청자가 없습니다.</div>
          <div id="massageChair-count" class="count-info">0/5</div>
          <div class="progress-bar"><div id="massageChair-progress" class="progress-fill"></div></div>
          <button disabled>20시 20분 시작</button>
        </div>
      </div>
    </section>
  </section>
</div>

<script src="main.js"></script>
<script>
window.Module = window.Module || {};
Module.onRuntimeInitialized = function() {
  const loginUser = Module.cwrap('login_user', 'string', ['number', 'string']);
  const getScheduleByClass = Module.cwrap('get_schedule_by_class', 'string', ['number']);
  const getMealJson = Module.cwrap('get_meal_json', 'string', []);
  const getDormStatusJson = Module.cwrap('get_dorm_status_json', 'string', []);
  const getDayOfWeekString = Module.cwrap('get_day_of_week_string', 'string', ['number']); // C에서 요일 문자열 가져오기

  const loginSection = document.getElementById('login-section');
  const mainContent = document.getElementById('main-content');
  const loginStudentIdInput = document.getElementById('login-student-id');
  const loginPasswordInput = document.getElementById('login-password');
  const loginSubmitBtn = document.getElementById('login-submit-btn');
  const loginMessageElem = document.getElementById('login-message');
  const headerUser = document.getElementById('header-user');

  let loggedInUser = null;

  function clearInputErrors() {
    loginStudentIdInput.classList.remove('error');
    loginPasswordInput.classList.remove('error');
    loginMessageElem.textContent = '';
  }

  loginSubmitBtn.addEventListener('click', () => {
    clearInputErrors();
    const studentIdRaw = loginStudentIdInput.value.trim();
    const passwordRaw = loginPasswordInput.value.trim();

    if (!studentIdRaw || !passwordRaw) {
      loginMessageElem.textContent = '모든 항목을 입력해주세요.';
      if (!studentIdRaw) loginStudentIdInput.classList.add('error');
      if (!passwordRaw) loginPasswordInput.classList.add('error');
      return;
    }

    const studentId = Number(studentIdRaw);
    if (isNaN(studentId)) {
      loginMessageElem.textContent = '학번은 숫자만 입력 가능합니다.';
      loginStudentIdInput.classList.add('error');
      return;
    }

    const loginResultJson = loginUser(studentId, passwordRaw);
    let loginResult;
    try {
      loginResult = JSON.parse(loginResultJson);
    } catch (e) {
      loginMessageElem.textContent = '로그인 처리 중 오류가 발생했습니다.';
      return;
    }

    if (loginResult.status === 'success') {
      loggedInUser = loginResult.user;
      loginMessageElem.textContent = '';
      loginSection.classList.add('hidden');
      mainContent.classList.remove('hidden');
      headerUser.textContent = loggedInUser.name;

      renderAll();
    } else {
      loginMessageElem.textContent = loginResult.message;
    }
  });

  function renderSchedule() {
    const scheduleData = JSON.parse(getScheduleByClass(loggedInUser.classId));
    const today = new Date();
    const dayOfWeekIndex = today.getDay(); // 0: 일, 1: 월, ..., 6: 토
    const dayOfWeekString = getDayOfWeekString(dayOfWeekIndex); // C 함수를 통해 요일 문자열 가져오기

    document.getElementById('schedule-date').textContent = `${scheduleData.date} (${dayOfWeekString}요일)`;
    const list = document.getElementById('schedule-list');
    list.innerHTML = ''; // 기존 내용 지우기

    const dailySchedule = scheduleData.weekSchedule[dayOfWeekString];
    if (dailySchedule && dailySchedule.length > 0) {
      dailySchedule.forEach(item => {
        const div = document.createElement('div');
        div.className = 'schedule-item';
        div.innerHTML = `<div class="period">${item.period}교시</div><div class="subject">${item.subject} (${item.teacher})</div>`;
        list.appendChild(div);
      });
    } else {
      list.innerHTML = `<div class="schedule-item"><div class="subject">오늘 시간표는 없습니다.</div></div>`;
    }
  }

  function renderMeal() {
    const mealJson = getMealJson();
    const meal = JSON.parse(mealJson);
    document.getElementById('meal-date').textContent = meal.date;
    const content = document.getElementById('meal-content');
    const mealMenuElem = document.getElementById('meal-menu');
    if (meal.menu === "오늘은 급식이 없습니다.") {
      content.querySelector('.empty').style.display = 'block';
      mealMenuElem.textContent = '';
      document.getElementById('meal-calories').textContent = '0Kcal';
    } else {
      content.querySelector('.empty').style.display = 'none';
      mealMenuElem.textContent = meal.menu;
      document.getElementById('meal-calories').textContent = meal.calories + 'Kcal';
    }
  }

  function renderProfile() {
    document.getElementById('profile-name').textContent = loggedInUser.name;
    document.getElementById('profile-id').textContent = loggedInUser.studentId;
  }

  function renderDorm() {
    const dormJson = getDormStatusJson();
    const dorm = JSON.parse(dormJson);

    const selfStudyCount = dorm.selfStudy.current + '/' + dorm.selfStudy.max;
    document.getElementById('selfStudy-count').textContent = selfStudyCount;
    document.getElementById('selfStudy-progress').style.width = (dorm.selfStudy.current / dorm.selfStudy.max * 100) + '%';

    const massageChairCount = dorm.massageChair.current + '/' + dorm.massageChair.max;
    document.getElementById('massageChair-count').textContent = massageChairCount;
    document.getElementById('massageChair-progress').style.width = (dorm.massageChair.current / dorm.massageChair.max * 100) + '%';
  }

  function renderAll() {
    renderSchedule();
    renderMeal();
    renderProfile();
    renderDorm();
  }

  document.querySelectorAll('.meal-tab').forEach(tab => {
    tab.addEventListener('click', () => {
      document.querySelectorAll('.meal-tab').forEach(t => t.classList.remove('active'));
      tab.classList.add('active');
      alert(tab.textContent + ' 데이터는 아직 준비 중입니다.');
    });
  });

  mainContent.classList.add('hidden'); // 초기에는 메인 콘텐츠 숨기기
};
</script>
</body>
</html>